   1               		.file	"lcd44780.c"
   2               	__SREG__ = 0x3f
   3               	__SP_H__ = 0x3e
   4               	__SP_L__ = 0x3d
   5               	__CCP__ = 0x34
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
  15               	.Ltext0:
  17               	data_dir_out:
  18               	.LFB4:
  19               	.LM1:
  20               	/* prologue: function */
  21               	/* frame size = 0 */
  22               	/* stack size = 0 */
  23               	.L__stack_usage = 0
  24               	.LM2:
  25 0000 8F9A      		sbi 49-32,7
  26               	.LM3:
  27 0002 8E9A      		sbi 49-32,6
  28               	.LM4:
  29 0004 8D9A      		sbi 49-32,5
  30               	.LM5:
  31 0006 BF9A      		sbi 55-32,7
  32               	/* epilogue start */
  33               	.LM6:
  34 0008 0895      		ret
  35               	.LFE4:
  38               	lcd_sendHalf:
  39               	.LFB6:
  40               	.LM7:
  41               	.LVL0:
  42               	/* prologue: function */
  43               	/* frame size = 0 */
  44               	/* stack size = 0 */
  45               	.L__stack_usage = 0
  46               	.LM8:
  47 000a 80FF      		sbrs r24,0
  48 000c 00C0      		rjmp .L3
  49               	.LM9:
  50 000e C79A      		sbi 56-32,7
  51 0010 00C0      		rjmp .L4
  52               	.L3:
  53               	.LM10:
  54 0012 C798      		cbi 56-32,7
  55               	.L4:
  56               	.LM11:
  57 0014 81FF      		sbrs r24,1
  58 0016 00C0      		rjmp .L5
  59               	.LM12:
  60 0018 959A      		sbi 50-32,5
  61 001a 00C0      		rjmp .L6
  62               	.L5:
  63               	.LM13:
  64 001c 9598      		cbi 50-32,5
  65               	.L6:
  66               	.LM14:
  67 001e 82FF      		sbrs r24,2
  68 0020 00C0      		rjmp .L7
  69               	.LM15:
  70 0022 969A      		sbi 50-32,6
  71 0024 00C0      		rjmp .L8
  72               	.L7:
  73               	.LM16:
  74 0026 9698      		cbi 50-32,6
  75               	.L8:
  76               	.LM17:
  77 0028 83FF      		sbrs r24,3
  78 002a 00C0      		rjmp .L9
  79               	.LM18:
  80 002c 979A      		sbi 50-32,7
  81 002e 0895      		ret
  82               	.L9:
  83               	.LM19:
  84 0030 9798      		cbi 50-32,7
  85 0032 0895      		ret
  86               	.LFE6:
  89               	lcd_readHalf:
  90               	.LFB7:
  91               	.LM20:
  92               	/* prologue: function */
  93               	/* frame size = 0 */
  94               	/* stack size = 0 */
  95               	.L__stack_usage = 0
  96               	.LVL1:
  97               	.LM21:
  98 0034 86B3      		in r24,54-32
  99               	.LVL2:
 100               	.LM22:
 101 0036 881F      		rol r24
 102 0038 8827      		clr r24
 103 003a 881F      		rol r24
 104               	.LVL3:
 105               	.LM23:
 106 003c 8599      		sbic 48-32,5
 107               	.LM24:
 108 003e 8260      		ori r24,lo8(2)
 109               	.LVL4:
 110               	.L12:
 111               	.LM25:
 112 0040 8699      		sbic 48-32,6
 113               	.LM26:
 114 0042 8460      		ori r24,lo8(4)
 115               	.LVL5:
 116               	.L13:
 117               	.LM27:
 118 0044 8799      		sbic 48-32,7
 119               	.LM28:
 120 0046 8860      		ori r24,lo8(8)
 121               	.LVL6:
 122               	.L14:
 123               	.LM29:
 124 0048 0895      		ret
 125               	.LFE7:
 127               	.global	_lcd_read_byte
 129               	_lcd_read_byte:
 130               	.LFB9:
 131               	.LM30:
 132 004a 1F93      		push r17
 133               	/* prologue: function */
 134               	/* frame size = 0 */
 135               	/* stack size = 1 */
 136               	.L__stack_usage = 1
 137               	.LVL7:
 138               	.LBB12:
 139               	.LBB13:
 140               	.LM31:
 141 004c 8F98      		cbi 49-32,7
 142               	.LM32:
 143 004e 8E98      		cbi 49-32,6
 144               	.LM33:
 145 0050 8D98      		cbi 49-32,5
 146               	.LM34:
 147 0052 BF98      		cbi 55-32,7
 148               	.LBE13:
 149               	.LBE12:
 150               	.LM35:
 151 0054 939A      		sbi 50-32,3
 152               	.LM36:
 153 0056 949A      		sbi 50-32,4
 154               	.LM37:
 155 0058 00D0      		rcall lcd_readHalf
 156 005a 182F      		mov r17,r24
 157 005c 1295      		swap r17
 158 005e 107F      		andi r17,lo8(-16)
 159               	.LVL8:
 160               	.LM38:
 161 0060 9498      		cbi 50-32,4
 162               	.LM39:
 163 0062 949A      		sbi 50-32,4
 164               	.LM40:
 165 0064 00D0      		rcall lcd_readHalf
 166               	.LVL9:
 167               	.LM41:
 168 0066 9498      		cbi 50-32,4
 169               	.LM42:
 170 0068 812B      		or r24,r17
 171               	.LVL10:
 172               	/* epilogue start */
 173 006a 1F91      		pop r17
 174 006c 0895      		ret
 175               	.LFE9:
 177               	.global	check_BF
 179               	check_BF:
 180               	.LFB10:
 181               	.LM43:
 182               	/* prologue: function */
 183               	/* frame size = 0 */
 184               	/* stack size = 0 */
 185               	.L__stack_usage = 0
 186               	.LM44:
 187 006e 9298      		cbi 50-32,2
 188               	.LM45:
 189 0070 00D0      		rcall _lcd_read_byte
 190               	/* epilogue start */
 191               	.LM46:
 192 0072 0895      		ret
 193               	.LFE10:
 195               	.global	_lcd_write_byte
 197               	_lcd_write_byte:
 198               	.LFB8:
 199               	.LM47:
 200               	.LVL11:
 201 0074 1F93      		push r17
 202               	/* prologue: function */
 203               	/* frame size = 0 */
 204               	/* stack size = 1 */
 205               	.L__stack_usage = 1
 206 0076 182F      		mov r17,r24
 207               	.LM48:
 208 0078 00D0      		rcall data_dir_out
 209               	.LVL12:
 210               	.LM49:
 211 007a 9398      		cbi 50-32,3
 212               	.LM50:
 213 007c 949A      		sbi 50-32,4
 214               	.LM51:
 215 007e 812F      		mov r24,r17
 216 0080 8295      		swap r24
 217 0082 8F70      		andi r24,lo8(15)
 218 0084 00D0      		rcall lcd_sendHalf
 219               	.LM52:
 220 0086 9498      		cbi 50-32,4
 221               	.LM53:
 222 0088 949A      		sbi 50-32,4
 223               	.LM54:
 224 008a 812F      		mov r24,r17
 225 008c 00D0      		rcall lcd_sendHalf
 226               	.LM55:
 227 008e 9498      		cbi 50-32,4
 228               	.L18:
 229               	.LM56:
 230 0090 00D0      		rcall check_BF
 231 0092 87FD      		sbrc r24,7
 232 0094 00C0      		rjmp .L18
 233               	/* epilogue start */
 234               	.LM57:
 235 0096 1F91      		pop r17
 236               	.LVL13:
 237 0098 0895      		ret
 238               	.LFE8:
 240               	.global	lcd_write_cmd
 242               	lcd_write_cmd:
 243               	.LFB11:
 244               	.LM58:
 245               	.LVL14:
 246               	/* prologue: function */
 247               	/* frame size = 0 */
 248               	/* stack size = 0 */
 249               	.L__stack_usage = 0
 250               	.LM59:
 251 009a 9298      		cbi 50-32,2
 252               	.LM60:
 253 009c 00D0      		rcall _lcd_write_byte
 254               	.LVL15:
 255               	/* epilogue start */
 256               	.LM61:
 257 009e 0895      		ret
 258               	.LFE11:
 260               	.global	lcd_write_data
 262               	lcd_write_data:
 263               	.LFB12:
 264               	.LM62:
 265               	.LVL16:
 266               	/* prologue: function */
 267               	/* frame size = 0 */
 268               	/* stack size = 0 */
 269               	.L__stack_usage = 0
 270               	.LM63:
 271 00a0 929A      		sbi 50-32,2
 272               	.LM64:
 273 00a2 00D0      		rcall _lcd_write_byte
 274               	.LVL17:
 275               	/* epilogue start */
 276               	.LM65:
 277 00a4 0895      		ret
 278               	.LFE12:
 280               	.global	lcd_char
 282               	lcd_char:
 283               	.LFB13:
 284               	.LM66:
 285               	.LVL18:
 286               	/* prologue: function */
 287               	/* frame size = 0 */
 288               	/* stack size = 0 */
 289               	.L__stack_usage = 0
 290               	.LM67:
 291 00a6 982F      		mov r25,r24
 292 00a8 9058      		subi r25,lo8(-(-128))
 293 00aa 9830      		cpi r25,lo8(8)
 294 00ac 00F4      		brsh .L23
 295               	.LM68:
 296 00ae 8770      		andi r24,lo8(7)
 297               	.LVL19:
 298               	.L23:
 299               	.LM69:
 300 00b0 00D0      		rcall lcd_write_data
 301               	.LVL20:
 302               	/* epilogue start */
 303               	.LM70:
 304 00b2 0895      		ret
 305               	.LFE13:
 307               	.global	lcd_str
 309               	lcd_str:
 310               	.LFB14:
 311               	.LM71:
 312               	.LVL21:
 313 00b4 CF93      		push r28
 314 00b6 DF93      		push r29
 315               	/* prologue: function */
 316               	/* frame size = 0 */
 317               	/* stack size = 2 */
 318               	.L__stack_usage = 2
 319 00b8 EC01      		movw r28,r24
 320               	.LM72:
 321 00ba 00C0      		rjmp .L25
 322               	.LVL22:
 323               	.L27:
 324               	.LM73:
 325 00bc 982F      		mov r25,r24
 326 00be 9058      		subi r25,lo8(-(-128))
 327 00c0 9830      		cpi r25,lo8(8)
 328 00c2 00F4      		brsh .L26
 329               	.LM74:
 330 00c4 8770      		andi r24,lo8(7)
 331               	.LVL23:
 332               	.L26:
 333               	.LM75:
 334 00c6 00D0      		rcall lcd_write_data
 335               	.LVL24:
 336               	.L25:
 337               	.LM76:
 338 00c8 8991      		ld r24,Y+
 339               	.LVL25:
 340 00ca 8823      		tst r24
 341 00cc 01F4      		brne .L27
 342               	/* epilogue start */
 343               	.LM77:
 344 00ce DF91      		pop r29
 345 00d0 CF91      		pop r28
 346               	.LVL26:
 347 00d2 0895      		ret
 348               	.LFE14:
 350               	.global	lcd_int
 352               	lcd_int:
 353               	.LFB15:
 354               	.LM78:
 355               	.LVL27:
 356 00d4 DF93      		push r29
 357 00d6 CF93      		push r28
 358 00d8 CDB7      		in r28,__SP_L__
 359 00da DEB7      		in r29,__SP_H__
 360 00dc 6197      		sbiw r28,17
 361 00de 0FB6      		in __tmp_reg__,__SREG__
 362 00e0 F894      		cli
 363 00e2 DEBF      		out __SP_H__,r29
 364 00e4 0FBE      		out __SREG__,__tmp_reg__
 365 00e6 CDBF      		out __SP_L__,r28
 366               	/* prologue: function */
 367               	/* frame size = 17 */
 368               	/* stack size = 19 */
 369               	.L__stack_usage = 19
 370               	.LM79:
 371 00e8 BE01      		movw r22,r28
 372 00ea 6F5F      		subi r22,lo8(-(1))
 373 00ec 7F4F      		sbci r23,hi8(-(1))
 374 00ee 4AE0      		ldi r20,lo8(10)
 375 00f0 50E0      		ldi r21,hi8(10)
 376 00f2 00D0      		rcall itoa
 377               	.LVL28:
 378 00f4 00D0      		rcall lcd_str
 379               	/* epilogue start */
 380               	.LM80:
 381 00f6 6196      		adiw r28,17
 382 00f8 0FB6      		in __tmp_reg__,__SREG__
 383 00fa F894      		cli
 384 00fc DEBF      		out __SP_H__,r29
 385 00fe 0FBE      		out __SREG__,__tmp_reg__
 386 0100 CDBF      		out __SP_L__,r28
 387 0102 CF91      		pop r28
 388 0104 DF91      		pop r29
 389 0106 0895      		ret
 390               	.LFE15:
 392               	.global	lcd_defchar
 394               	lcd_defchar:
 395               	.LFB16:
 396               	.LM81:
 397               	.LVL29:
 398 0108 1F93      		push r17
 399 010a CF93      		push r28
 400 010c DF93      		push r29
 401               	/* prologue: function */
 402               	/* frame size = 0 */
 403               	/* stack size = 3 */
 404               	.L__stack_usage = 3
 405 010e EB01      		movw r28,r22
 406               	.LM82:
 407 0110 90E0      		ldi r25,lo8(0)
 408 0112 8770      		andi r24,lo8(7)
 409 0114 9070      		andi r25,hi8(7)
 410               	.LVL30:
 411 0116 0896      		adiw r24,8
 412 0118 880F      		lsl r24
 413 011a 880F      		lsl r24
 414 011c 880F      		lsl r24
 415 011e 00D0      		rcall lcd_write_cmd
 416               	.LVL31:
 417 0120 18E0      		ldi r17,lo8(8)
 418               	.LVL32:
 419               	.L30:
 420               	.LM83:
 421 0122 8991      		ld r24,Y+
 422               	.LVL33:
 423 0124 00D0      		rcall lcd_write_data
 424               	.LVL34:
 425 0126 1150      		subi r17,lo8(-(-1))
 426               	.LM84:
 427 0128 01F4      		brne .L30
 428               	/* epilogue start */
 429               	.LM85:
 430 012a DF91      		pop r29
 431 012c CF91      		pop r28
 432               	.LVL35:
 433 012e 1F91      		pop r17
 434 0130 0895      		ret
 435               	.LFE16:
 437               	.global	lcd_locate
 439               	lcd_locate:
 440               	.LFB17:
 441               	.LM86:
 442               	.LVL36:
 443               	/* prologue: function */
 444               	/* frame size = 0 */
 445               	/* stack size = 0 */
 446               	.L__stack_usage = 0
 447               	.LM87:
 448 0132 8130      		cpi r24,lo8(1)
 449 0134 01F4      		brne .L33
 450               	.LVL37:
 451               	.LM88:
 452 0136 80E4      		ldi r24,lo8(64)
 453               	.LVL38:
 454               	.L33:
 455               	.LM89:
 456 0138 6058      		subi r22,lo8(-(-128))
 457               	.LVL39:
 458 013a 860F      		add r24,r22
 459               	.LVL40:
 460 013c 00D0      		rcall lcd_write_cmd
 461               	.LVL41:
 462               	/* epilogue start */
 463               	.LM90:
 464 013e 0895      		ret
 465               	.LFE17:
 467               	.global	lcd_cls
 469               	lcd_cls:
 470               	.LFB18:
 471               	.LM91:
 472               	/* prologue: function */
 473               	/* frame size = 0 */
 474               	/* stack size = 0 */
 475               	.L__stack_usage = 0
 476               	.LM92:
 477 0140 81E0      		ldi r24,lo8(1)
 478 0142 00D0      		rcall lcd_write_cmd
 479               	/* epilogue start */
 480               	.LM93:
 481 0144 0895      		ret
 482               	.LFE18:
 484               	.global	lcd_home
 486               	lcd_home:
 487               	.LFB19:
 488               	.LM94:
 489               	/* prologue: function */
 490               	/* frame size = 0 */
 491               	/* stack size = 0 */
 492               	.L__stack_usage = 0
 493               	.LM95:
 494 0146 83E0      		ldi r24,lo8(3)
 495 0148 00D0      		rcall lcd_write_cmd
 496               	/* epilogue start */
 497               	.LM96:
 498 014a 0895      		ret
 499               	.LFE19:
 501               	.global	lcd_init
 503               	lcd_init:
 504               	.LFB20:
 505               	.LM97:
 506               	/* prologue: function */
 507               	/* frame size = 0 */
 508               	/* stack size = 0 */
 509               	.L__stack_usage = 0
 510               	.LM98:
 511 014c 00D0      		rcall data_dir_out
 512               	.LM99:
 513 014e 8A9A      		sbi 49-32,2
 514               	.LM100:
 515 0150 8C9A      		sbi 49-32,4
 516               	.LM101:
 517 0152 8B9A      		sbi 49-32,3
 518               	.LM102:
 519 0154 9298      		cbi 50-32,2
 520               	.LM103:
 521 0156 9498      		cbi 50-32,4
 522               	.LM104:
 523 0158 9398      		cbi 50-32,3
 524               	.LVL42:
 525               	.LBB14:
 526               	.LBB15:
 527               	.LM105:
 528 015a 8FE2      		 ldi r24,lo8(29999)
 529 015c 95E7      	    ldi r25,hi8(29999)
 530 015e 0197      	    1:sbiw r24,1
 531 0160 01F4      	    brne 1b
 532 0162 00C0      		rjmp .
 533 0164 0000      		nop
 534               	.LBE15:
 535               	.LBE14:
 536               	.LM106:
 537 0166 9298      		cbi 50-32,2
 538               	.LM107:
 539 0168 9398      		cbi 50-32,3
 540               	.LM108:
 541 016a 80E3      		ldi r24,lo8(48)
 542 016c 00D0      		rcall lcd_sendHalf
 543               	.LVL43:
 544               	.LBB16:
 545               	.LBB17:
 546               	.LM109:
 547 016e 87E0      		 ldi r24,lo8(8199)
 548 0170 90E2      	    ldi r25,hi8(8199)
 549 0172 0197      	    1:sbiw r24,1
 550 0174 01F4      	    brne 1b
 551 0176 00C0      		rjmp .
 552 0178 0000      		nop
 553               	.LBE17:
 554               	.LBE16:
 555               	.LM110:
 556 017a 80E3      		ldi r24,lo8(48)
 557 017c 00D0      		rcall lcd_sendHalf
 558               	.LVL44:
 559               	.LBB18:
 560               	.LBB19:
 561               	.LM111:
 562 017e 87EC      		 ldi r24,lo8(199)
 563 0180 90E0      	    ldi r25,hi8(199)
 564 0182 0197      	    1:sbiw r24,1
 565 0184 01F4      	    brne 1b
 566 0186 00C0      		rjmp .
 567 0188 0000      		nop
 568               	.LBE19:
 569               	.LBE18:
 570               	.LM112:
 571 018a 80E2      		ldi r24,lo8(32)
 572 018c 00D0      		rcall lcd_sendHalf
 573               	.LVL45:
 574               	.LBB20:
 575               	.LBB21:
 576               	.LM113:
 577 018e 87EC      		 ldi r24,lo8(199)
 578 0190 90E0      	    ldi r25,hi8(199)
 579 0192 0197      	    1:sbiw r24,1
 580 0194 01F4      	    brne 1b
 581 0196 00C0      		rjmp .
 582 0198 0000      		nop
 583               	.LBE21:
 584               	.LBE20:
 585               	.LM114:
 586 019a 88E2      		ldi r24,lo8(40)
 587 019c 00D0      		rcall lcd_write_cmd
 588               	.LM115:
 589 019e 88E0      		ldi r24,lo8(8)
 590 01a0 00D0      		rcall lcd_write_cmd
 591               	.LM116:
 592 01a2 8CE0      		ldi r24,lo8(12)
 593 01a4 00D0      		rcall lcd_write_cmd
 594               	.LM117:
 595 01a6 86E0      		ldi r24,lo8(6)
 596 01a8 00D0      		rcall lcd_write_cmd
 597               	.LM118:
 598 01aa 00D0      		rcall lcd_cls
 599               	/* epilogue start */
 600               	.LM119:
 601 01ac 0895      		ret
 602               	.LFE20:
 748               	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 lcd44780.c
C:\Users\cadavre\AppData\Local\Temp\ccFEwcxc.s:2      *ABS*:0000003f __SREG__
C:\Users\cadavre\AppData\Local\Temp\ccFEwcxc.s:3      *ABS*:0000003e __SP_H__
C:\Users\cadavre\AppData\Local\Temp\ccFEwcxc.s:4      *ABS*:0000003d __SP_L__
C:\Users\cadavre\AppData\Local\Temp\ccFEwcxc.s:5      *ABS*:00000034 __CCP__
C:\Users\cadavre\AppData\Local\Temp\ccFEwcxc.s:6      *ABS*:00000000 __tmp_reg__
C:\Users\cadavre\AppData\Local\Temp\ccFEwcxc.s:7      *ABS*:00000001 __zero_reg__
C:\Users\cadavre\AppData\Local\Temp\ccFEwcxc.s:17     .text:00000000 data_dir_out
C:\Users\cadavre\AppData\Local\Temp\ccFEwcxc.s:38     .text:0000000a lcd_sendHalf
C:\Users\cadavre\AppData\Local\Temp\ccFEwcxc.s:89     .text:00000034 lcd_readHalf
C:\Users\cadavre\AppData\Local\Temp\ccFEwcxc.s:129    .text:0000004a _lcd_read_byte
C:\Users\cadavre\AppData\Local\Temp\ccFEwcxc.s:179    .text:0000006e check_BF
C:\Users\cadavre\AppData\Local\Temp\ccFEwcxc.s:197    .text:00000074 _lcd_write_byte
C:\Users\cadavre\AppData\Local\Temp\ccFEwcxc.s:242    .text:0000009a lcd_write_cmd
C:\Users\cadavre\AppData\Local\Temp\ccFEwcxc.s:262    .text:000000a0 lcd_write_data
C:\Users\cadavre\AppData\Local\Temp\ccFEwcxc.s:282    .text:000000a6 lcd_char
C:\Users\cadavre\AppData\Local\Temp\ccFEwcxc.s:309    .text:000000b4 lcd_str
C:\Users\cadavre\AppData\Local\Temp\ccFEwcxc.s:352    .text:000000d4 lcd_int
C:\Users\cadavre\AppData\Local\Temp\ccFEwcxc.s:394    .text:00000108 lcd_defchar
C:\Users\cadavre\AppData\Local\Temp\ccFEwcxc.s:439    .text:00000132 lcd_locate
C:\Users\cadavre\AppData\Local\Temp\ccFEwcxc.s:469    .text:00000140 lcd_cls
C:\Users\cadavre\AppData\Local\Temp\ccFEwcxc.s:486    .text:00000146 lcd_home
C:\Users\cadavre\AppData\Local\Temp\ccFEwcxc.s:503    .text:0000014c lcd_init

UNDEFINED SYMBOLS
itoa
